{"version":3,"sources":["actions/index.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","components/Root.js","index.js"],"names":["nextTodoId","VisibilityFilters","FilterLink","filter","children","exact","to","activeStyle","textDecoration","color","Footer","connect","input","dispatch","onSubmit","e","text","preventDefault","value","trim","type","id","ref","node","Todo","onClick","completed","style","TodoList","todos","toggleTodo","map","todo","key","getVisibleTodos","t","Error","state","ownProps","App","params","match","VisibleTodoList","action","visibilityFilter","combineReducers","Root","store","path","component","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.4910d61d.chunk.js","sourcesContent":["let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst FilterLink = ({ filter, children }) => (\r\n    <NavLink\r\n        exact\r\n        to={filter === 'SHOW_ALL' ? '/' : `/${filter}`}\r\n        activeStyle={{\r\n          textDecoration: 'none',\r\n          color: 'black'\r\n        }}\r\n    >\r\n      {children}\r\n    </NavLink>\r\n)\r\n\r\n// const mapStateToProps = (state, ownProps) => ({\r\n//   active: ownProps.filter === state.visibilityFilter\r\n// })\r\n//\r\n// const mapDispatchToProps = (dispatch, ownProps) => ({\r\n//   onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n// })\r\n//\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(Link)\r\n\r\nexport default FilterLink\r\n","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n    <p>\r\n        Show: <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\r\n        {', '}\r\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\r\n        {', '}\r\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\r\n    </p>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => input = node} />\r\n        <button type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    todos: getVisibleTodos(state.todos, ownProps.filter) // previously was getVisibleTodos(state.todos, state.visibilityFilter)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = ({ match: { params } }) => {\r\n    return (\r\n        <div>\r\n            <AddTodo />\r\n            <VisibleTodoList filter={params.filter || 'SHOW_ALL'} />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        (todo.id === action.id)\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos\r\n","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Route path=\"/:filter?\" component={App} />\r\n        </Router>\r\n    </Provider>\r\n)\r\n\r\nRoot.propTypes = {\r\n    store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Root\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport rootReducer from './reducers'\r\nimport Root from './components/Root'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender(<Root store={store} />, document.getElementById('root'))\r\n"],"sourceRoot":""}