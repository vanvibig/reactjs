{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","id","ref","node","Todo","completed","textDecoration","TodoList","todos","toggleTodo","map","todo","key","getVisibleTodos","t","Error","App","VisibleTodoList","action","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.03c1ec85.chunk.js","sourcesContent":["let nextTodoId = 0\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Link = ({ active, children, onClick }) => (\r\n    <button\r\n       onClick={onClick}\r\n       disabled={active}\r\n       style={{\r\n           marginLeft: '4px',\r\n       }}\r\n    >\r\n      {children}\r\n    </button>\r\n)\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link\r\n","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)\r\n","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n      All\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\r\n      Active\r\n    </FilterLink>\r\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\r\n      Completed\r\n    </FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => input = node} />\r\n        <button type=\"submit\">\r\n          Add Todo\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <li\r\n    onClick={onClick}\r\n    style={{\r\n      textDecoration: completed ? 'line-through' : 'none'\r\n    }}\r\n  >\r\n    {text}\r\n  </li>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({ todos, toggleTodo }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter(t => t.completed)\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter(t => !t.completed)\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleTodo: id => dispatch(toggleTodo(id))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport AddTodo from '../containers/AddTodo'\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\nconst App = () => (\r\n  <div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App\r\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo =>\r\n        (todo.id === action.id)\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos\r\n","import { VisibilityFilters } from '../actions'\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './components/App'\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}